PROGRAM ::= FUNCTIONS CITY
FUNCTIONS ::= FUNCTION FUNCTIONS | epsilon
CITY ::= city name { BLOCKS }
BLOCKS ::= BLOCK MOREBLOCKS
MOREBLOCKS ::= BLOCK MOREBLOCKS | epsilon

BLOCK ::= ROAD | BIKEPATH | TOURPATH | CORIDOR | BUILDING | RIVER | PARK | MARKPOINT
ROAD ::= road name { COMMANDS }
BIKEPATH ::= bikePath name { COMMANDS }
TOURPATH ::= bikeTourPath name { COMMANDS }
CORIDOR ::= bikeCoridor name { COMMANDS }
BUILDING ::= building name { COMMANDS }
RIVER ::= river name { COMMANDS }
PARK ::= park name { COMMANDS }

MARKPOINT ::= BIKESTAND | BIKESHED | MBAJK | RENTBIKE
BIKESTAND ::= bikeStand name POINT
BIKESHED ::= bikeShed name POINT
MBAJK ::= mbajk name POINT
RENTBIKE ::= rentBike name POINT


COMMANDS ::= COMMAND MORECOMMANDS
MORECOMMANDS ::= COMMAND MORECOMMANDS | epsilon
COMMAND ::= LINE | BEND | BOX | CIRC | FOR | IF | VARIABLE | CONST
LINE ::= line( POINT , POINT , WIDTH )
BEND ::= bend( POINT , POINT , ANGLE )
ANGLE ::= integer | variable_name    //integer ::= [0-9]+
BOX ::= box( POINT , POINT )
CIRC ::= circ( POINT , RADIUS )
RADIUS ::= EXPR
FOR ::= for SPR to SPR { COMMANDS }
IF ::= if SPR OPERATOR SPR { COMMANDS } ELSEIFS ELSE
ELSEIFS ::= ELSEIF ELSEIFS | epsilon
ELSEIF ::= else if SPR OPERATOR SPR { COMMANDS }
ELSE ::= { COMMANDS } | epsilon
OPERATOR ::= > | => | <= | < | == | !=
SPR ::= float | variable_name | integer
POINT ::= ( EXPR , EXPR )
VARIABLE ::= var variable_name = VALUE ;  //variable_name = [a-zA-Z]+
CONST ::= const variable_name = VALUE ;
VALUE ::= float | integer | variable_name | POINT | CALL
CALL ::= call name ( CALLARGS )
CALLARGS ::= VARIABLENAMEORNUMBER MOREVORN
MOREVORN ::= , VARIABLENAMEORNUMBER MOREVORN | epsilon
FUNCTION ::= func name ( ARGS ) { COMMANDS RETURN }
ARGS ::= variable_name MOREVARS
MOREVARS ::= , variable_name MOREVARS | epsilon
RETURN ::= return RETURNVALUE
RETURNVALUE ::= POINT | float | variable_name | integer
EXPR ::= E
E ::= T EE
EE ::= + T EE | epsilon
T ::= F TT
TT ::= * F TT | epsilon
F ::= ( E ) | float | variable_name | integer